rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isAdmin() {
      return isSignedIn() && request.auth.token.role == 'admin';
    }

    function isOwner(uid) {
      return isSignedIn() && request.auth.uid == uid;
    }
    
    function isMemoryOwner(memoryId) {
      return isSignedIn() && get(/databases/$(database)/documents/memories/$(memoryId)).data.ownerUid == request.auth.uid;
    }

    // Own user document only
    match /users/{uid} {
      allow read, write: if isOwner(uid) || isAdmin();
    }

    // Memory container
    match /memories/{memoryId} {
      allow read, write: if isMemoryOwner(memoryId) || isAdmin();
    }

    // Asset metadata under a memory
    match /memories/{memoryId}/assets/{assetId} {
      allow read, write: if isMemoryOwner(memoryId) || isAdmin();
    }
    
    // Content blocks under a memory
    match /memories/{memoryId}/blocks/{blockId} {
      allow read, write: if isMemoryOwner(memoryId) || isAdmin();
    }

    // Orders (managed by admins, readable by owner)
    match /orders/{orderId} {
      allow read: if isAdmin() || (isSignedIn() && get(/databases/$(database)/documents/orders/$(orderId)).data.userUid == request.auth.uid);
      allow write: if isAdmin();
    }

    // Public pages are read-only for everyone, and not writable by clients
    match /publicPages/{pageId} {
      allow read: if true;
      allow write: if false; // Should be written by Functions only
    }
    
    match /publicPages/{pageId}/blocks/{blockId} {
      allow read: if true; // Public blocks are readable
      allow write: if false; // Should be written by Functions only
    }
  }
}
