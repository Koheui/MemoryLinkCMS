rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Memories:
    // - Users can only read/write memories they own.
    match /memories/{memoryId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.ownerUid;
    }

    // Assets:
    // - Users can only read/write assets they own.
    // - For deletes, we additionally verify that the user also owns the parent memory document.
    //   This is required for the transaction to be able to read the memory doc to verify ownership.
    match /assets/{assetId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.ownerUid;
      allow write: if request.auth != null && request.auth.uid == resource.data.ownerUid &&
                   (request.method == 'delete' ?
                     get(/databases/$(database)/documents/memories/$(resource.data.memoryId)).data.ownerUid == request.auth.uid :
                     true);
    }
    
    // Orders:
    // - Admins can read/write all orders.
    // - Users can read orders matching their UID after they have claimed them.
    match /orders/{orderId} {
      function isAdmin() {
        return request.auth.token.role == 'admin';
      }

      allow read: if request.auth != null && (isAdmin() || request.auth.uid == resource.data.userUid);
      allow write: if request.auth != null && isAdmin();
    }
  }
}
