rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isAdmin() {
      return isSignedIn() && request.auth.token.role == 'admin';
    }

    function isOwner(uid) {
      return isSignedIn() && request.auth.uid == uid;
    }

    match /users/{uid} {
      allow read, write: if isOwner(uid) || isAdmin();
    }

    match /memories/{memoryId} {
      // Allow read access for owner or admin.
      allow read: if isOwner(resource.data.ownerUid) || isAdmin();
      // Allow create/update/delete only for the owner or admin.
      // On create, ownerUid must match the user's uid.
      allow write: if (isOwner(request.resource.data.ownerUid) && request.resource.data.ownerUid == request.auth.uid) || isAdmin();
    }

    match /assets/{assetId} {
      // Allow create if ownerUid in the new document matches the user's uid.
      allow create: if isOwner(request.resource.data.ownerUid) || isAdmin();
      // Allow read, update, delete if the stored ownerUid matches the user's uid.
      allow read, update, delete: if isOwner(resource.data.ownerUid) || isAdmin();
    }

    match /orders/{orderId} {
      // Only admins can read or write orders.
      allow read, write: if isAdmin();
    }
  }
}
