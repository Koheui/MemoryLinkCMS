
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // User can only read/write their own user document
    match /users/{uid} {
      allow read, write: if request.auth.uid == uid;
    }

    // Memories can be read/written by their owner.
    match /memories/{memoryId} {
      allow read, write: if request.auth.uid == resource.data.ownerUid;

      // Anyone can read the blocks of a memory if the memory is published
      // This might need refinement based on public page logic
      match /blocks/{blockId} {
         allow read, write: if request.auth.uid == get(/databases/$(database)/documents/memories/$(memoryId)).data.ownerUid;
      }
    }

    // Assets can be read/written by their owner.
    // This uses a collection group query.
    match /{path=**}/assets/{assetId} {
      allow read, write: if request.auth.uid == resource.data.ownerUid;
    }

    // Orders are admin-only for now
    match /orders/{orderId} {
      allow read, write: if request.auth.token.role == 'admin';
    }

    // Public pages are read-only for everyone, and cannot be written by clients.
    match /publicPages/{pageId} {
      allow read: if true;
      allow write: if false; // Should be written by functions only
    }
  }
}
