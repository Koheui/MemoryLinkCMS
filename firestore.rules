rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() { return request.auth != null; }
    function isOwner(uid) { return isSignedIn() && request.auth.uid == uid; }
    function isAdmin() { return isSignedIn() && request.auth.token.role == 'admin'; }

    // User can only read/write their own user document
    match /users/{userId} {
      allow read, write: if isOwner(userId) || isAdmin();
    }

    match /memories/{memoryId} {
      // Allow reading a specific memory if the user is the owner or an admin
      allow get: if isOwner(resource.data.ownerUid) || isAdmin();
      
      // Allow listing/querying memories only by the owner
      allow list: if isSignedIn() && request.query.where.ownerUid == request.auth.uid;

      // Allow writing if the user is the owner or an admin
      allow write: if isOwner(request.resource.data.ownerUid) || isAdmin();
    }

    // Assets can be created by the owner of the memory.
    // Reading/updating/deleting requires ownership.
    match /assets/{assetId} {
      allow create: if isOwner(request.resource.data.ownerUid) || isAdmin();
      allow read, update, delete: if isOwner(resource.data.ownerUid) || isAdmin();
    }

    // Orders are admin-only for now
    match /orders/{orderId} {
      allow read, write: if isAdmin();
    }
  }
}
