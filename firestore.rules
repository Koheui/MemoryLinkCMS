
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Memories Collection
    // - Authenticated users can only access/modify their own memory documents.
    match /memories/{memoryId} {
      allow read: if request.auth != null && (resource.data.ownerUid == request.auth.uid || resource.data.status == 'active');
      allow create: if request.auth != null && request.resource.data.ownerUid == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.ownerUid == request.auth.uid;
    }

    // Orders Collection
    // - Anyone can create an order (for admin invites).
    // - Authenticated users can only read/update their own orders.
    // - Admins can read all orders (handled by server-side logic/security, client rule is strict).
    match /orders/{orderId} {
      allow get: if request.auth != null;
      allow list: if request.auth != null && request.query.where.find(p => p[0] == 'userUid' && p[2] == request.auth.uid);
      allow create: if true; // Allow admin to create orders for users not yet signed up
      allow update: if request.auth != null && resource.data.userUid == request.auth.uid;
      // Deletion of orders is not allowed from the client.
      allow delete: if false;
    }

    // Assets Collection
    // - Authenticated users can only manage their own assets.
    match /assets/{assetId} {
      allow read: if request.auth != null; // Allow reading all assets for simplicity, public page might need this.
      allow create: if request.auth != null && request.resource.data.ownerUid == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.ownerUid == request.auth.uid;
    }

    // Default deny all other collections
    match /{path=**}/documents/{document} {
      allow read, write: if false;
    }
  }
}
