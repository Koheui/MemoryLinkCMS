rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(uid) {
      return request.auth.uid == uid;
    }

    // Memories:
    // - Anyone can read a memory if it's 'active'.
    // - Only the owner can create, update, or delete their own memories.
    match /memories/{memoryId} {
      allow read: if resource.data.status == 'active';
      allow get: if isSignedIn() && isOwner(resource.data.ownerUid);
      allow list: if isSignedIn() && isOwner(resource.data.ownerUid);
      allow create, update, delete: if isSignedIn() && isOwner(request.resource.data.ownerUid);
    }
    
    // Orders:
    // - Unauthenticated users (admins) can create new orders (invitations).
    // - Authenticated users can list/read orders associated with their email.
    // - Authenticated users can update an order to claim it (set userUid).
    match /orders/{orderId} {
      allow get: if isSignedIn();
      allow list: if isSignedIn() && request.query.where.email == request.auth.email;
      allow create: if true;
      allow update: if isSignedIn();
    }
    
    // Assets:
    // - Assets are public read.
    // - Only the owner can create/update/delete their assets.
    match /assets/{assetId} {
      allow read: if true;
      allow create, update, delete: if isSignedIn() && isOwner(request.resource.data.ownerUid);
    }
  }
}
