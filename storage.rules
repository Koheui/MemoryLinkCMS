rules_version = '2';

function isSignedIn() { return request.auth != null; }
function isAdmin() { return isSignedIn() && request.auth.token.role == 'admin'; }

// MIME種別とサイズの制限
function okType() {
  return request.resource != null && (
    request.resource.contentType.matches('image/.*') ||
    request.resource.contentType.matches('video/.*') ||
    request.resource.contentType.matches('audio/.*')
  );
}
function sizeOK() {
  return request.resource != null && (
    (request.resource.contentType.matches('image/.*') && request.resource.size < 25 * 1024 * 1024) ||
    (request.resource.contentType.matches('video/.*') && request.resource.size < 200 * 1024 * 1024) ||
    (request.resource.contentType.matches('audio/.*') && request.resource.size < 30 * 1024 * 1024)
  );
}

service firebase.storage {
  match /b/{bucket}/o {

    // 編集・アップロード領域（ユーザー自身 & 同一テナントのみ）
    // tenant 照合は Firestore の memories/{memoryId}.tenant を参照
    match /users/{uid}/memories/{memoryId}/{path=**} {
      allow read, write: if request.auth != null
        && request.auth.uid == uid
        && get(/databases/(default)/documents/memories/$(memoryId)).data.tenant
           == request.auth.token.allowTenant
        && okType() && sizeOK();
    }

    // 画像変換など処理領域：Functions 専用
    match /proc/{path=**} {
      allow read, write: if false;
    }

    // 公開配信用（閲覧自由・書込はFunctionsのみ）
    match /deliver/publicPages/{pageId}/{all=**} {
      allow read: if true;
      allow write: if false;
    }
  }
}
